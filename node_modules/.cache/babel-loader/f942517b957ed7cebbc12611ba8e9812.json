{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/Desktop/CCPro/flashcards-2.0/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport FlashcardList from './FlashcardList';\nimport axios from 'axios';\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS);\n  const [categories, setCategories] = useState([]);\n  const categoryEl = useRef();\n  const amountEl = useRef();\n  useEffect(() => {\n    axios.get('https://opentdb.com/api_category.php').then(res => {\n      // console.log(res.data);\n      setCategories(res.data.trivia_categories);\n    });\n  }, []);\n  useEffect(() => {}, []);\n\n  function decodeString(str) {\n    const textArea = document.createElement('textarea');\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    axios.get('https://opentdb.com/api.php', {\n      params: {\n        amount: amountEl.current.value,\n        category: categoryEl.current.value\n      }\n    }).then(res => {\n      setFlashcards(res.data.results.map((questionItem, index) => {\n        const answer = decodeString(questionItem.correct_answer);\n        const options = [...questionItem.incorrect_answers.map(a => decodeString(a)), answer];\n        return {\n          id: `${index}-${Date.now()}`,\n          question: decodeString(questionItem.question),\n          answer: answer,\n          options: options.sort(() => Math.random() - 0.5)\n        };\n      })); // console.log(res.data)\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"header\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"category\",\n          ref: categoryEl,\n          children: categories.map(category => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category.id,\n              children: category.name\n            }, category.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Number of Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"amount\",\n          min: \"1\",\n          step: \"1\",\n          defaultValue: 10,\n          ref: amountEl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(FlashcardList, {\n        flashcards: flashcards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Sm2I8mqhWJVTKVeBFYDMD28G0MI=\");\n\n_c = App;\nconst SAMPLE_FLASHCARDS = [{\n  id: 1,\n  question: \"Who do you think you are?\",\n  answer: \"Kenderson\",\n  options: [\"Jesus\", \"Kenderson\", \"Messiah\", \"BTS\"]\n}, {\n  id: 2,\n  question: \"Who do you think God is?\",\n  answer: \"Kendricks\",\n  options: [\"Jesus\", \"Kenderson\", \"Messiah\", \"BTS\"]\n}];\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kenneth/Desktop/CCPro/flashcards-2.0/src/App.js"],"names":["React","useState","useEffect","useRef","FlashcardList","axios","App","flashcards","setFlashcards","SAMPLE_FLASHCARDS","categories","setCategories","categoryEl","amountEl","get","then","res","data","trivia_categories","decodeString","str","textArea","document","createElement","innerHTML","value","handleSubmit","e","preventDefault","params","amount","current","category","results","map","questionItem","index","answer","correct_answer","options","incorrect_answers","a","id","Date","now","question","sort","Math","random","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport FlashcardList from './FlashcardList';\nimport axios from 'axios';\nimport './app.css';\n\nfunction App() {\n  const [ flashcards, setFlashcards ] = useState(SAMPLE_FLASHCARDS);\n  const [categories, setCategories] = useState([]);\n  const categoryEl = useRef();\n  const amountEl = useRef();\n\n  useEffect( () => {\n    axios\n    .get ('https://opentdb.com/api_category.php')\n    .then(res => {\n      // console.log(res.data);\n      setCategories(res.data.trivia_categories);\n    })\n  }, [])\n\n  useEffect( () => {\n\n  }, [])\n\n  function decodeString(str) {\n    const textArea = document.createElement('textarea');\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    axios.get('https://opentdb.com/api.php', {\n      params: {\n        amount: amountEl.current.value,\n        category: categoryEl.current.value,\n      }\n    })\n    .then(res => {\n      setFlashcards(res.data.results.map( (questionItem, index) => {\n        const answer = decodeString(questionItem.correct_answer);\n        const options = [\n          ...questionItem.incorrect_answers.map(a => decodeString(a)\n          ),\n          answer\n        ]\n        return {\n          id: `${index}-${Date.now()}`,\n          question: decodeString(questionItem.question),\n          answer: answer,\n          options: options.sort( () => Math.random() - 0.5)\n\n        }\n      }))\n      // console.log(res.data)\n    })\n  }\n\n  return (\n    <div>\n      <form className=\"header\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"category\">Category</label>\n          <select id=\"category\" ref={categoryEl}>\n            {categories.map(category => {\n              return <option value={category.id} key={category.id}>{category.name}</option>\n            })}\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">Number of Questions</label>\n          <input type=\"number\" id=\"amount\" min=\"1\" step=\"1\" defaultValue={10} ref={amountEl} />\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn\">Generate</button>\n        </div>\n\n      </form>\n      <div className=\"container\">\n        <FlashcardList flashcards={flashcards} />\n      </div>\n    </div>\n  );\n}\n\nconst SAMPLE_FLASHCARDS = [\n  {\n    id: 1,\n    question: \"Who do you think you are?\",\n    answer: \"Kenderson\",\n    options: [\n      \"Jesus\",\n      \"Kenderson\",\n      \"Messiah\",\n      \"BTS\",\n    ]\n  },\n  {\n    id: 2,\n    question: \"Who do you think God is?\",\n    answer: \"Kendricks\",\n    options: [\n      \"Jesus\",\n      \"Kenderson\",\n      \"Messiah\",\n      \"BTS\",\n    ]\n  },\n]\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}