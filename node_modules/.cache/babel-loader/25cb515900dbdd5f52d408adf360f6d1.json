{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/Desktop/CCPro/flashcards-2.0/src/Flashcard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Flashcard({\n  flashcard\n}) {\n  _s();\n\n  const [flip, setFlip] = useState(false);\n  const frontEl = useRef();\n  const backEl = useRef();\n\n  function setMaxHeight() {\n    const frontHeight = frontEl.current.getBoundingClientRect().height;\n    const backHeight = frontEl.current.getBoundingClientRect().height;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card ${flip ? 'flip' : ''}`,\n    onClick: () => setFlip(!flip),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"front\",\n      ref: frontEl,\n      children: [flashcard.question, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flashcard-options\",\n        children: flashcard.options.map(option => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flashcard-option\",\n            children: [\" \", option, \" \"]\n          }, option, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"back\",\n      ref: backEl,\n      children: [\" \", flashcard.answer, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Flashcard, \"UdEJcVbRw1WEEz+qgSqbaPoytJs=\");\n\n_c = Flashcard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Flashcard\");","map":{"version":3,"sources":["/Users/kenneth/Desktop/CCPro/flashcards-2.0/src/Flashcard.js"],"names":["React","useState","useEffect","useRef","Flashcard","flashcard","flip","setFlip","frontEl","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","height","backHeight","question","options","map","option","answer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;AAEA,eAAe,SAASC,SAAT,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAAkC;AAAA;;AAC/C,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAlC;AAEA,QAAMO,OAAO,GAAGL,MAAM,EAAtB;AACA,QAAMM,MAAM,GAAGN,MAAM,EAArB;;AAEA,WAASO,YAAT,GAAwB;AACtB,UAAMC,WAAW,GAAGH,OAAO,CAACI,OAAR,CAAgBC,qBAAhB,GAAwCC,MAA5D;AACA,UAAMC,UAAU,GAAGP,OAAO,CAACI,OAAR,CAAgBC,qBAAhB,GAAwCC,MAA3D;AACD;;AAED,sBACE;AACE,IAAA,SAAS,EAAG,QAAOR,IAAI,GAAG,MAAH,GAAY,EAAG,EADxC;AAEE,IAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,CAACD,IAAF,CAFxB;AAAA,4BAGE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,GAAG,EAAEE,OAA5B;AAAA,iBACGH,SAAS,CAACW,QADb,eAEE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBACGX,SAAS,CAACY,OAAV,CAAkBC,GAAlB,CAAsBC,MAAM,IAAI;AAC/B,8BAAO;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,4BAAkDA,MAAlD;AAAA,aAAuCA,MAAvC;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAWE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAEV,MAA3B;AAAA,sBAAqCJ,SAAS,CAACe,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA1BuBhB,S;;KAAAA,S","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nexport default function Flashcard( {flashcard} ) {\n  const [ flip, setFlip ] = useState(false);\n\n  const frontEl = useRef();\n  const backEl = useRef();\n\n  function setMaxHeight() {\n    const frontHeight = frontEl.current.getBoundingClientRect().height\n    const backHeight = frontEl.current.getBoundingClientRect().height\n  }\n\n  return (\n    <div\n      className={`card ${flip ? 'flip' : ''}`}\n      onClick={() => setFlip(!flip)} >\n      <div className=\"front\" ref={frontEl}>\n        {flashcard.question}\n        <div className=\"flashcard-options\">\n          {flashcard.options.map(option => {\n            return <div className=\"flashcard-option\" key={option} > {option} </div>\n          })}\n        </div>\n      </div>\n      <div className=\"back\" ref={backEl}> {flashcard.answer} </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}