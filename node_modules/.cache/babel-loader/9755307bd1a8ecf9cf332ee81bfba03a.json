{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/Desktop/CCPro/flashcards-2.0/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport FlashcardList from './FlashcardList';\nimport axios from 'axios';\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS);\n  const categoryEl = useRef();\n  useEffect(() => {\n    axios.get('https://opentdb.com/api_category.php').then(res => {\n      console.log(res);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://opentdb.com/api.php?amount=10').then(res => {\n      setFlashcards(res.data.results.map((questionItem, index) => {\n        const answer = decodeString(questionItem.correct_answer);\n        const options = [...questionItem.incorrect_answers.map(a => decodeString(a)), answer];\n        return {\n          id: `${index}-${Date.now()}`,\n          question: decodeString(questionItem.question),\n          answer: answer,\n          options: options.sort(() => Math.random() - 0.5)\n        };\n      }));\n      console.log(res.data);\n    });\n  }, []);\n\n  function decodeString(str) {\n    const textArea = document.createElement('textarea');\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"header\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlForm: \"category\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"category\",\n          ref: categoryEl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(FlashcardList, {\n        flashcards: flashcards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"dbLgQSdtiCtVXHM0r4NBI8rutsI=\");\n\n_c = App;\nconst SAMPLE_FLASHCARDS = [{\n  id: 1,\n  question: \"Who do you think you are?\",\n  answer: \"Kenderson\",\n  options: [\"Jesus\", \"Kenderson\", \"Messiah\", \"BTS\"]\n}, {\n  id: 2,\n  question: \"Who do you think God is?\",\n  answer: \"Kendricks\",\n  options: [\"Jesus\", \"Kenderson\", \"Messiah\", \"BTS\"]\n}];\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kenneth/Desktop/CCPro/flashcards-2.0/src/App.js"],"names":["React","useState","useEffect","useRef","FlashcardList","axios","App","flashcards","setFlashcards","SAMPLE_FLASHCARDS","categoryEl","get","then","res","console","log","data","results","map","questionItem","index","answer","decodeString","correct_answer","options","incorrect_answers","a","id","Date","now","question","sort","Math","random","str","textArea","document","createElement","innerHTML","value","handleSubmit","e","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCP,QAAQ,CAACQ,iBAAD,CAA9C;AACA,QAAMC,UAAU,GAAGP,MAAM,EAAzB;AAEAD,EAAAA,SAAS,CAAE,MAAM;AACfG,IAAAA,KAAK,CACJM,GADD,CACM,sCADN,EAECC,IAFD,CAEMC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQAX,EAAAA,SAAS,CAAE,MAAM;AACfG,IAAAA,KAAK,CAACM,GAAN,CAAU,uCAAV,EACCC,IADD,CACMC,GAAG,IAAI;AACXL,MAAAA,aAAa,CAACK,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBC,GAAjB,CAAsB,CAACC,YAAD,EAAeC,KAAf,KAAyB;AAC3D,cAAMC,MAAM,GAAGC,YAAY,CAACH,YAAY,CAACI,cAAd,CAA3B;AACA,cAAMC,OAAO,GAAG,CACd,GAAGL,YAAY,CAACM,iBAAb,CAA+BP,GAA/B,CAAmCQ,CAAC,IAAIJ,YAAY,CAACI,CAAD,CAApD,CADW,EAGdL,MAHc,CAAhB;AAKA,eAAO;AACLM,UAAAA,EAAE,EAAG,GAAEP,KAAM,IAAGQ,IAAI,CAACC,GAAL,EAAW,EADtB;AAELC,UAAAA,QAAQ,EAAER,YAAY,CAACH,YAAY,CAACW,QAAd,CAFjB;AAGLT,UAAAA,MAAM,EAAEA,MAHH;AAILG,UAAAA,OAAO,EAAEA,OAAO,CAACO,IAAR,CAAc,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAApC;AAJJ,SAAP;AAOD,OAda,CAAD,CAAb;AAeAnB,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACD,KAlBD;AAmBD,GApBQ,EAoBN,EApBM,CAAT;;AAsBA,WAASM,YAAT,CAAsBY,GAAtB,EAA2B;AACzB,UAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAjB;AACAF,IAAAA,QAAQ,CAACG,SAAT,GAAqBJ,GAArB;AACA,WAAOC,QAAQ,CAACI,KAAhB;AACD;;AAED,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACD;;AAED,sBACE;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,QAAQ,EAAEF,YAAnC;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAO,UAAA,QAAQ,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,EAAE,EAAC,UAAX;AAAsB,UAAA,GAAG,EAAE9B;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,UAAU,EAAEH;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA3DQD,G;;KAAAA,G;AA6DT,MAAMG,iBAAiB,GAAG,CACxB;AACEkB,EAAAA,EAAE,EAAE,CADN;AAEEG,EAAAA,QAAQ,EAAE,2BAFZ;AAGET,EAAAA,MAAM,EAAE,WAHV;AAIEG,EAAAA,OAAO,EAAE,CACP,OADO,EAEP,WAFO,EAGP,SAHO,EAIP,KAJO;AAJX,CADwB,EAYxB;AACEG,EAAAA,EAAE,EAAE,CADN;AAEEG,EAAAA,QAAQ,EAAE,0BAFZ;AAGET,EAAAA,MAAM,EAAE,WAHV;AAIEG,EAAAA,OAAO,EAAE,CACP,OADO,EAEP,WAFO,EAGP,SAHO,EAIP,KAJO;AAJX,CAZwB,CAA1B;AAyBA,eAAelB,GAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport FlashcardList from './FlashcardList';\nimport axios from 'axios';\nimport './app.css';\n\nfunction App() {\n  const [ flashcards, setFlashcards ] = useState(SAMPLE_FLASHCARDS);\n  const categoryEl = useRef();\n\n  useEffect( () => {\n    axios\n    .get ('https://opentdb.com/api_category.php')\n    .then(res => {\n      console.log(res);\n    })\n  }, [])\n\n  useEffect( () => {\n    axios.get('https://opentdb.com/api.php?amount=10')\n    .then(res => {\n      setFlashcards(res.data.results.map( (questionItem, index) => {\n        const answer = decodeString(questionItem.correct_answer);\n        const options = [\n          ...questionItem.incorrect_answers.map(a => decodeString(a)\n          ),\n          answer\n        ]\n        return {\n          id: `${index}-${Date.now()}`,\n          question: decodeString(questionItem.question),\n          answer: answer,\n          options: options.sort( () => Math.random() - 0.5)\n\n        }\n      }))\n      console.log(res.data)\n    })\n  }, [])\n\n  function decodeString(str) {\n    const textArea = document.createElement('textarea');\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  return (\n    <div>\n      <form className=\"header\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlForm=\"category\">Category</label>\n          <select id=\"category\" ref={categoryEl}>\n          </select>\n        </div>\n\n      </form>\n      <div className=\"container\">\n        <FlashcardList flashcards={flashcards} />\n      </div>\n    </div>\n  );\n}\n\nconst SAMPLE_FLASHCARDS = [\n  {\n    id: 1,\n    question: \"Who do you think you are?\",\n    answer: \"Kenderson\",\n    options: [\n      \"Jesus\",\n      \"Kenderson\",\n      \"Messiah\",\n      \"BTS\",\n    ]\n  },\n  {\n    id: 2,\n    question: \"Who do you think God is?\",\n    answer: \"Kendricks\",\n    options: [\n      \"Jesus\",\n      \"Kenderson\",\n      \"Messiah\",\n      \"BTS\",\n    ]\n  },\n]\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}